//=============================================================================
//
// チュートリアル [tutorial.cpp]
// Author : 鈴木 聖大
//
//=============================================================================

//=============================================================================
//インクルードファイル
//=============================================================================
#include "tutorial.h"
#include "manager.h"
#include "renderer.h"
#include "sound.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define TEXTURE_PATH_TUTORIAL "Data/Texture/tutorial.png"
#define TUTORIAL_POS (D3DXVECTOR3((SCREEN_WIDTH/2),(SCREEN_HEIGHT/2),0.0f))
#define TUTORIAL_SIZE (D3DXVECTOR3(SCREEN_WIDTH,SCREEN_HEIGHT,0.0f))

//=============================================================================
// 静的メンバ変数宣言初期化
//=============================================================================
LPDIRECT3DTEXTURE9 CTutorial::m_pTexture = {};

//=============================================================================
// ロード処理
//=============================================================================
HRESULT CTutorial::Load(void)
{
	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();
	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice, TEXTURE_PATH_TUTORIAL, &m_pTexture);
	return S_OK;
}

//=============================================================================
// アンロード処理
//=============================================================================
void CTutorial::Unload(void)
{
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// コンストラクタ
//=============================================================================
CTutorial::CTutorial(int nPriority) :CUi(nPriority)
{
	m_pObject2d = NULL;
}

//=============================================================================
// デストラクタ
//=============================================================================
CTutorial::~CTutorial()
{
}

//=============================================================================
// セリフの生成
//=============================================================================
CTutorial * CTutorial::Create(void)
{
	// メモリの確保
	CTutorial * pTutorial = new CTutorial;

	if (pTutorial != NULL)
	{
		// 座標をset
		pTutorial->SetPos(TUTORIAL_POS);
		// サイズをset
		pTutorial->SetSize(TUTORIAL_SIZE);
		// テクスチャ指定
		pTutorial->BindTexture(m_pTexture);
		// 初期化処理
		pTutorial->Init();
	}

	return pTutorial;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CTutorial::Init(void)
{
	//背景生成
	m_pObject2d = CObject2D::Create(D3DXVECTOR3(SCREEN_WIDTH, SCREEN_HEIGHT, 0) / 2, D3DXVECTOR3(SCREEN_WIDTH, SCREEN_HEIGHT, 0), 0.0f, NULL, PRIORITY_UI_3);
	//背景カラー設定
	m_pObject2d->SetCol(D3DCOLOR_RGBA(0, 0, 0, 128));

	CUi::Init();

	//BGMの再生
	CManager::GetSound()->PlaySound(CSound::SOUND_LABEL_BGM_TUTORIAL);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CTutorial::Uninit(void)
{
	CUi::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CTutorial::Update(void)
{
	CUi::Update();

	//背景用オブジェクト更新
	if (m_pObject2d != NULL)
	{
		m_pObject2d->Update();
	}
}

//=============================================================================
// 描画関数
//=============================================================================
void CTutorial::Draw(void)
{
	CUi::Draw();
}

//=============================================================================
// 描画関数
//=============================================================================
void CTutorial::TutorialUninit(void)
{
	if (m_pObject2d != NULL)
	{
		m_pObject2d->Uninit();
	}
	Uninit();
}
